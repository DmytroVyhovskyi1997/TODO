{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/TODO/src/pages/AddTodo.js/AddTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, BoxTitle, ButtonDelete, ButtonEdit } from \"./AddTodo.styled\";\nimport { getError, getIsLoading, getTodos } from \"../../redux/selectors\";\nimport { fetchTodos, deleteTodos, updateTodos } from \"../../redux/operations\";\nimport InputTodo from \"../../components/InputTodo/InputTodo\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddTodo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n  const [editingId, setEditingId] = useState(null);\n\n  // Use local state for edited title\n  const [editedTitle, setEditedTitle] = useState('');\n  const handleEdit = (id, title) => {\n    setEditingId(id);\n    // Set the initial value for the edited title\n    setEditedTitle(title);\n  };\n  const handleSave = () => {\n    // Dispatch the updateTodos action with the edited title\n    dispatch(updateTodos({\n      id: editingId,\n      title: editedTitle\n    }));\n    // Reset editing state\n    setEditingId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(InputTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: todos.map(({\n        id,\n        title\n      }) => /*#__PURE__*/_jsxDEV(BoxTitle, {\n        children: editingId === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedTitle,\n            onChange: e => setEditedTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ButtonEdit, {\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [title, /*#__PURE__*/_jsxDEV(ButtonDelete, {\n            onClick: () => dispatch(deleteTodos(id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ButtonEdit, {\n            onClick: () => handleEdit(id, title),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddTodo, \"pYrj09LSmPHPt92HRDWRaabYkLc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Box","BoxTitle","ButtonDelete","ButtonEdit","getError","getIsLoading","getTodos","fetchTodos","deleteTodos","updateTodos","InputTodo","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTodo","_s","dispatch","todos","isLoading","error","editingId","setEditingId","editedTitle","setEditedTitle","handleEdit","id","title","handleSave","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/TODO/src/pages/AddTodo.js/AddTodo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, BoxTitle, ButtonDelete, ButtonEdit } from \"./AddTodo.styled\";\nimport { getError,  getIsLoading, getTodos } from \"../../redux/selectors\";\nimport { fetchTodos, deleteTodos, updateTodos } from \"../../redux/operations\";\nimport InputTodo from \"../../components/InputTodo/InputTodo\";\nimport Loader from \"../../components/Loader/Loader\";\n\nconst AddTodo = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n \n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  const [editingId, setEditingId] = useState(null);\n\n  // Use local state for edited title\n  const [editedTitle, setEditedTitle] = useState('');\n\n\n  const handleEdit = (id, title) => {\n    setEditingId(id);\n    // Set the initial value for the edited title\n    setEditedTitle(title);\n  };\n\n  const handleSave = () => {\n    // Dispatch the updateTodos action with the edited title\n    dispatch(updateTodos({ id: editingId, title: editedTitle }));\n    // Reset editing state\n    setEditingId(null);\n  };\n\n  return (\n    <>\n      {error && <p>Error: {error}</p>}\n      {isLoading && <Loader />}\n      <InputTodo />\n      <Box>\n        {todos.map(({ id, title }) => (\n          <BoxTitle key={id}>\n            {editingId === id ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editedTitle}\n                  onChange={(e) => setEditedTitle(e.target.value)}\n                />\n                <ButtonEdit onClick={handleSave}>Save</ButtonEdit>\n              </>\n            ) : (\n              <>\n                {title}\n                <ButtonDelete onClick={() => dispatch(deleteTodos(id))} />\n                <ButtonEdit onClick={() => handleEdit(id, title)}>Edit</ButtonEdit>\n              </>\n            )}\n          </BoxTitle>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default AddTodo;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}