{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/TODO/src/pages/AddTodo.js/AddTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, BoxTitle, ButtonDelete, ButtonEdit } from \"./AddTodo.styled\";\nimport { getError, getIsLoading, getTodos } from \"../../redux/selectors\";\nimport { fetchTodos, deleteTodos, updateTodos } from \"../../redux/operations\";\nimport InputTodo from \"../../components/InputTodo/InputTodo\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddTodo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  // Use an object to store editing state for each todo\n  const [editingState, setEditingState] = useState({\n    id: null,\n    title: ''\n  });\n  const handleEdit = (id, title) => {\n    // Set editing state for the specific todo\n    setEditingState({\n      id,\n      title\n    });\n  };\n  const handleSave = () => {\n    dispatch(updateTodos({\n      id: editingState.id,\n      title: editingState.title\n    }));\n    // Reset editing state\n    setEditingState({\n      id: null,\n      title: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(InputTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: todos.map(({\n        id,\n        title\n      }) => /*#__PURE__*/_jsxDEV(BoxTitle, {\n        children: editingState.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingState.title,\n            onChange: e => setEditingState({\n              ...editingState,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ButtonEdit, {\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [title, /*#__PURE__*/_jsxDEV(ButtonDelete, {\n            onClick: () => dispatch(deleteTodos(id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ButtonEdit, {\n            onClick: () => handleEdit(id, title),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddTodo, \"gjHIqWuBOjE3waXfe+YOAQDfhzI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Box","BoxTitle","ButtonDelete","ButtonEdit","getError","getIsLoading","getTodos","fetchTodos","deleteTodos","updateTodos","InputTodo","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTodo","_s","dispatch","todos","isLoading","error","editingState","setEditingState","id","title","handleEdit","handleSave","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/TODO/src/pages/AddTodo.js/AddTodo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, BoxTitle, ButtonDelete, ButtonEdit } from \"./AddTodo.styled\";\nimport { getError, getIsLoading, getTodos } from \"../../redux/selectors\";\nimport { fetchTodos, deleteTodos, updateTodos } from \"../../redux/operations\";\nimport InputTodo from \"../../components/InputTodo/InputTodo\";\nimport Loader from \"../../components/Loader/Loader\";\n\nconst AddTodo = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  // Use an object to store editing state for each todo\n  const [editingState, setEditingState] = useState({ id: null, title: '' });\n\n  const handleEdit = (id, title) => {\n    // Set editing state for the specific todo\n    setEditingState({ id, title });\n  };\n\n  const handleSave = () => {\n    dispatch(updateTodos({ id: editingState.id, title: editingState.title }));\n    // Reset editing state\n    setEditingState({ id: null, title: '' });\n  };\n\n  return (\n    <>\n      {error && <p>Error: {error}</p>}\n      {isLoading && <Loader />}\n      <InputTodo />\n      <Box>\n        {todos.map(({ id, title }) => (\n          <BoxTitle key={id}>\n            {editingState.id === id ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editingState.title}\n                  onChange={(e) =>\n                    setEditingState({ ...editingState, title: e.target.value })\n                  }\n                />\n                <ButtonEdit onClick={handleSave}>Save</ButtonEdit>\n              </>\n            ) : (\n              <>\n                {title}\n                <ButtonDelete onClick={() => dispatch(deleteTodos(id))} />\n                <ButtonEdit onClick={() => handleEdit(id, title)}>Edit</ButtonEdit>\n              </>\n            )}\n          </BoxTitle>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default AddTodo;\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,kBAAkB;AAC1E,SAASC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,uBAAuB;AACxE,SAASC,UAAU,EAAEC,WAAW,EAAEC,WAAW,QAAQ,wBAAwB;AAC7E,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,KAAK,GAAGpB,WAAW,CAACO,QAAQ,CAAC;EACnC,MAAMc,SAAS,GAAGrB,WAAW,CAACM,YAAY,CAAC;EAC3C,MAAMgB,KAAK,GAAGtB,WAAW,CAACK,QAAQ,CAAC;EAEnCP,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC;IAAE4B,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAEzE,MAAMC,UAAU,GAAGA,CAACF,EAAE,EAAEC,KAAK,KAAK;IAChC;IACAF,eAAe,CAAC;MAAEC,EAAE;MAAEC;IAAM,CAAC,CAAC;EAChC,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBT,QAAQ,CAACT,WAAW,CAAC;MAAEe,EAAE,EAAEF,YAAY,CAACE,EAAE;MAAEC,KAAK,EAAEH,YAAY,CAACG;IAAM,CAAC,CAAC,CAAC;IACzE;IACAF,eAAe,CAAC;MAAEC,EAAE,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAa,QAAA,GACGP,KAAK,iBAAIR,OAAA;MAAAe,QAAA,GAAG,SAAO,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BZ,SAAS,iBAAIP,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBnB,OAAA,CAACH,SAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbnB,OAAA,CAACb,GAAG;MAAA4B,QAAA,EACDT,KAAK,CAACc,GAAG,CAAC,CAAC;QAAET,EAAE;QAAEC;MAAM,CAAC,kBACvBZ,OAAA,CAACZ,QAAQ;QAAA2B,QAAA,EACNN,YAAY,CAACE,EAAE,KAAKA,EAAE,gBACrBX,OAAA,CAAAE,SAAA;UAAAa,QAAA,gBACEf,OAAA;YACEqB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEb,YAAY,CAACG,KAAM;YAC1BW,QAAQ,EAAGC,CAAC,IACVd,eAAe,CAAC;cAAE,GAAGD,YAAY;cAAEG,KAAK,EAAEY,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAC3D;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFnB,OAAA,CAACV,UAAU;YAACoC,OAAO,EAAEZ,UAAW;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA,eAClD,CAAC,gBAEHnB,OAAA,CAAAE,SAAA;UAAAa,QAAA,GACGH,KAAK,eACNZ,OAAA,CAACX,YAAY;YAACqC,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAACV,WAAW,CAACgB,EAAE,CAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1DnB,OAAA,CAACV,UAAU;YAACoC,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAACF,EAAE,EAAEC,KAAK,CAAE;YAAAG,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA,eACnE;MACH,GAlBYR,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBP,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACf,EAAA,CAvDID,OAAO;EAAA,QACMlB,WAAW,EACdC,WAAW,EACPA,WAAW,EACfA,WAAW;AAAA;AAAAyC,EAAA,GAJrBxB,OAAO;AAyDb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}